dy_import_module_symbols("sensorlib.r2py")

def get_gps_coordinates():

  # get a connection to communicate with sensors
  port = get_connectionport()
  sensor_socket = getconnection(port)

  request_data(sensor_socket, 'startLocating', [])

  # try to read current location
  location_data = request_data(sensor_socket, 'readLocation', []) 

  # if location was not retrieved, keep trying
  while not location_data:
    sleep(2)
    location_data = request_data(sensor_socket, 'readLocation', [])

  providers = ["gps", "network", "passive"]
  for p in providers:
    try:
      location = location_data[p]
      log("provider: " + p + '\n')
      break
    except Exception as e:
      continue

  coordinates = {"latitude": location["latitude"], "longitude": location["longitude"]}

  request_data(sensor_socket, 'stopLocating', []) 
  sensor_socket.close()
  return coordinates

def get_address(coordinates):

  # get a connection to communicate with sensors
  port = get_connectionport()
  sensor_socket = getconnection(port)

  # return a list of addresses (1 address by default)
  address = request_data(sensor_socket, 'geocode', [coordinates["latitude"], coordinates["longitude"]])

  # take the first returned address
  address = address[0]

  sensor_socket.close()
  return address

def get_city(address):
  pass

def get_state(address):
  pass

def get_country(address):
  pass

def find_closest_point(long, lat, listofpoints):
  pass

def load_long_lat_from_file(filename):
  pass


-----------------------TEST-----------------------
coordinates = get_gps_coordinates()

log("latitude: " + str(coordinates["latitude"]) + ", longitude: " + str(coordinates["longitude"]) + "\n")

address = get_address(coordinates)

log("Address: " + str(address) + "\n")

postal = address["postal_code"]
streetno = address["feature_name"]
streetname = address["thoroughfare"]
#cityname = address["locality"]
statename = address["admin_area"]
countryname = address["country_name"]

log(str(streetno) + " " + streetname + ", " + statename + ", " + countryname + ", " + str(postal) + "\n")