dy_import_module_symbols("httpretrieve.r2py")
dy_import_module_symbols("math.r2py")
dy_import_module_symbols("librepyfile.r2py")

statefilename = "states.txt"        # Database of states
countryfilename = "countries.txt"   # Database of countries

# Downloads the required file from the server
def get_file_from_server(filename):
  if filename not in listfiles(): # In case it already exists
    if filename not in [statefilename, countryfilename]:
      url = "http://sensibilityclearinghouse.poly.edu/data/quad/" + filename
    else:
      url = "http://sensibilityclearinghouse.poly.edu/data/" + filename
    httpretrieve_save_file(url, filename)

# Returns the filename in the database which contains the given lat/lng point
# and other nearby points
def get_filename(lat, lng):
  # get ceiling as x/y index
  x = int(math_ceil(lat))
  y = int(math_ceil(lng))
  filename = str(x) + '_' + str(y) + '.txt'
  return filename

def get_city_name():

  # Get the blurred coordinates
  try:
    location_data = get_location()
  except Exception: # Not able to use LocationNotFoundException here
    raise Exception
  lat = location_data["latitude"]
  lng = location_data["longitude"]

  # Open the city file containing these coordinates
  filename = get_filename(lat, lng)
  get_file_from_server(filename)
  fileobj = open(filename, "r")

  # Search for the coordinates and get the corresponding city name, state code
  # and country code
  while True:
    try:
      line = fileobj.next().strip()
    except StopIteration:
      break
    else:
      linedata = line.split("\t")
      lat1 = linedata[1]
      lng1 = linedata[2]
      if lat == lat1 and lng == lng1:
        city_name = linedata[0]
        country_code = linedata[3]
        state_code = linedata[4]
        break
  fileobj.close()

  # Get state code
  code = country_code + "." + str(state_code)

  # Download and open the States database
  get_file_from_server(statefilename)
  statefile = open(statefilename, "r")

  # Get the state name
  while True:
    try:
      line = statefile.next().strip()
    except StopIteration:
      break
    else:
      line = line.split("\t")
      if code == line[0]:
        state_name = line[1]
        break
  statefile.close()

  # Download and open the Countries database
  get_file_from_server(countryfilename)
  countryfile = open(countryfilename, "r")

  # Get country name
  while True:
    try:
      line = countryfile.next().strip()
    except StopIteration:
      break
    else:
      line = line.split("\t")
      if country_code == line[0]:
        country_name = line[1]
        break
  countryfile.close()

  address = {"city": city_name, "state": state_name, "country": country_name}
  return address

CHILD_CONTEXT_DEF["get_geolocation"] = {
    "type": "func",
    "args": None,
    "return": dict,
    "exceptions": "any",
    "target": get_city_name,
}